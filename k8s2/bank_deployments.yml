apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: bank-api
        imagePullPolicy: IfNotPresent
        # volumeMounts:
        # - name: secret-volume
        #   mountPath: /etc/secret-volume 
        # - mountPath: /etc/DB_USER     
        #   name: db-user 
        #   readOnly: true
        # - mountPath: /etc/DB_PASSWORD     
        #   name: db-password
        #   readOnly: true                   
        envFrom:
        - configMapRef:
            name: global-config 
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: global-credential 
                key: POSTGRES_USER 
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: global-credential 
                key: POSTGRES_PASSWORD 
      # volumes:
      #   # - name: secret-volume
      #   #   secret:
      #   #     secretName: global-credential  
      #   - name: db-user 
      #     secret:
      #       secretName: global-credential
      #   - name: db-password 
      #     secret:
      #       secretName: global-credential          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: global-config
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: global-credential 
                  key: POSTGRES_USER 
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: global-credential 
                  key: POSTGRES_PASSWORD 
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb          
            # - mountPath: /etc/POSTGRES_USER     
            #   name: postgres-user 
            #   readOnly: true
            # - mountPath: /etc/POSTGRES_PASSWORD     
            #   name: postgres-password
            #   readOnly: true
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: bank-pvc
        # - name: postgres-user 
        #   secret:
        #     secretName: global-credential
        # - name: postgres-password 
        #   secret:
        #     secretName: global-credential